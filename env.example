#
# Environment configuration
#
# Copy this file, edit to your liking, and save it as .env
#
# The only required environment variables are the ones that are not commented out
# All others have somewhat sensible defaults.
#

####################################
# Source S3 bucket
####################################
# Source bucket credentials
export SV_SOURCE_ACCESS=your-AWS-access-key
export SV_SOURCE_SECRET=your-AWS-secret-key

# NB: placeholder value is > 63 chars, thus it is not a legal bucket name
# Replace with the name of your source media bucket
export SV_SOURCE_BUCKET=please-do-kindly-replace-this-value-with-the-name-of-your-source-bucket
#export SV_SOURCE_REGION=us-east-1

# optional prefix, limit visibility into source bucket to just this prefix
# Do not end the prefix with a slash
#export SV_SOURCE_PREFIX=some/source/path

####################################
# Destination S3 bucket
####################################
# Dest bucket credentials
export SV_DEST_ACCESS=your-AWS-access-key
export SV_DEST_SECRET=your-AWS-secret-key

# NB: placeholder value is > 63 chars, thus it is not a legal bucket name
# Replace with the name of your destination bucket
export SV_DEST_BUCKET=please-do-kindly-replace-this-value-with-the-name-of-your-source-bucket
#export SV_DEST_REGION=us-east-1

# optional prefix, all writes to dest bucket will be under this prefix
# Do not end the prefix with a slash
#export SV_DEST_PREFIX=some/dest/path

####################################
# Initial admin user
####################################
# Admin user will be created at startup if it does not exist
export SV_ADMIN_USER=admin@local.local

# Change this, or you'll never know your password!
export SV_ADMIN_PASSWORD=$(cat /dev/urandom | head -1024 | shasum -a 256 | awk '{print $1}')

# admin locale
#export SV_ADMIN_LOCALE=en_US

# Overwrite the initial admin user even if it already exists
#export SV_ADMIN_OVERWRITE=true

####################################
# Main site configuration
####################################
# Title of the site
#export SV_TITLE=s3vid

# If this is true, anyone can browse and view media
# If this is false, you must be a logged-in user to browse or view media
#export SV_PUBLIC=false

# If this is true, visitors will be able to register for an account on the site
#export SV_ALLOW_REGISTRATION=false

# If this is set, then SV_ALLOW_REGISTRATION is ignored
# If set, it specifies an object on the destination bucket containing a list of email addresses
# to allow registration from. The contents of this file can be a JSON array, or a flat text file
# with one email address per line
# Note that this path will still be relative to SV_DEST_PREFIX
#export SV_LIMIT_REGISTRATION=private/limitRegistration.json

# The default locale
#export SV_DEFAULT_LOCALE=en_US

# Base URL, outbound emails will point back here
#export SV_SITE_URL=http://127.0.0.1:3000/

####################################
# SSL and SECURITY
####################################
# Set to true to enable SSL cert generation and automatic renewal
#export SV_CERTBOT_ENABLED=false

# Email to register with LetsEncrypt. Required if SV_CERTBOT_ENABLED is true
#export SV_CERTBOT_EMAIL=someone@example.com

# Hostname for the site, used to generate SSL cert via Certbot (if enabled)
# Derived from SV_SITE_URL if not set
#export SV_HOSTNAME=$(echo "${SV_SITE_URL}" | tr ':/' '  ' | awk '{print $2}')

# Set this to true to skip generation of strong DH params during startup
# see https://weakdh.org/sysadmin.html
#export SKIP_STRONG_DH_PARAMS=false

# User data will be encrypted with this key
#export SV_USERDATA_KEY=some-random-key-$(date +%s)-$(cat /dev/urandom | head -1024 | shasum -a 256 | awk '{print $1}')
#export SV_USERDATA_IV="a random IV, this is optional. If omitted an IV will be generated from the key"

# For password hashing
#export SV_BCRYPT_ROUNDS=12

####################################
# Autoscan and Transformation Queue
####################################
# Initial scan occurs shortly after startup. Set to -1 to disable
#export SV_AUTOSCAN_INITIAL_DELAY=-1

# How often to perform regular scans. Usually daily is sufficient. Set to -1 to disable
#export SV_AUTOSCAN_INTERVAL=-1

# To disable scanning:
#export SV_AUTOSCAN_INITIAL_DELAY=-1
#export SV_AUTOSCAN_INTERVAL=-1

####################################
# Email
####################################
# Note: If SV_EMAIL_HOST is not set, email will be disabled

# If you're using Gmail as an SMTP server, you'll need an app-specific password
# See: https://support.google.com/mail/?p=InvalidSecondFactor
#export SV_EMAIL_HOST=smtp.example.com
#export SV_EMAIL_PORT=465
#export SV_EMAIL_USER=someone@example.org
#export SV_EMAIL_PASSWORD=some-smtp-password
#export SV_EMAIL_SECURE=false

# Emails sent from this system will appear to come from this address
#export SV_EMAIL_FROM=site-operator@example.org

####################################
# Redis and cache expirations
####################################
#export SV_REDIS_HOST=127.0.0.1
#export SV_REDIS_PORT=6379
#export SV_REDIS_FLUSH_AT_STARTUP=false

# Expire user sessions after this many milliseconds
#export SV_SESSION_EXPIRATION=$(expr 1000 \* 60 \* 60 \* 24 \* 365 \* 50)

# How long before tokens in account verification emails expire. Default is 2 days
#export SV_TIMEOUT_ACCOUNT_VERIFICATION=$(expr 1000 \* 60 \* 60 \* 24 \* 2)

# How long before tokens in reset-password emails expire. Default is 1 hour
#export SV_TIMEOUT_RESET_PASSWORD=$(expr 1000 \* 60 \* 60)

# Cache listings from the source bucket, default 5 minutes
#export SV_S3_LIST_CACHE_EXPIRATION=$(expr 5 \* 60 \* 1000)

# Cache manifests, default 1 minute
#export SV_S3_MANIFEST_CACHE_EXPIRATION=$(expr 5 \* 60 \* 1000)
